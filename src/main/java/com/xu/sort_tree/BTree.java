package com.xu.sort_tree;


/**
 * 多叉树的优点（二叉树的缺点）
 *     多叉树结点少，高度低
 *     二叉树结点多，高度高
 *     数据量大时，二叉树加载到内存的节点也就多了
 *     而多叉树：
 *
 *     B树是前面平衡树算法的扩展，它支持保存在磁盘或者网络上的符号表进行外部查找，
 *     这些文件可能比我们以前考虑的输入要大的多（难以存入内存）。
 *     既然内容保存在磁盘中，那么自然会因为树的深度过大而造成磁盘I/O读写过于频繁
 *     （磁盘读写速率是有限制的），进而导致查询效率低下。
 *     那么降低树的深度自然很重要了。因此，我们引入了B树，多路查找树。
 *
 * BTree
 * B+Tree : 数据都保存在叶子节点
 * B*Tree ： 索引之间有指针相连
 */
public class BTree {


}
